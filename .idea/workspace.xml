<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="2dcb78d4-427a-4588-aa68-18957b275e59" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/.env" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/CrackHash.iml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/compiler.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/gradle.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/jarRepositories.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/modules/crack-hash-manager.main.iml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/modules/crack-hash-worker.main.iml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Manager/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Manager/Dockerfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Manager/build.gradle" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Manager/gradle/wrapper/gradle-wrapper.jar" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Manager/gradle/wrapper/gradle-wrapper.properties" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Manager/src/main/java/ru/nsu/burde/crackhash/manager/ManagerApplication.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Manager/src/main/java/ru/nsu/burde/crackhash/manager/controller/ClientController.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Manager/src/main/java/ru/nsu/burde/crackhash/manager/dto/RequestDTO.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Manager/src/main/java/ru/nsu/burde/crackhash/manager/dto/RequestIdDTO.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Manager/src/main/java/ru/nsu/burde/crackhash/manager/dto/ResultDTO.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Manager/src/main/java/ru/nsu/burde/crackhash/manager/model/Ticket.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Manager/src/main/resources/application.properties" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Manager/src/test/java/ru/nsu/burde/crackhash/manager/ManagerApplicationTests.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Worker/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Worker/Dockerfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Worker/build.gradle" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Worker/gradle/wrapper/gradle-wrapper.jar" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Worker/gradle/wrapper/gradle-wrapper.properties" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Worker/src/main/java/ru/nsu/burde/crackhash/worker/WorkerApplication.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Worker/src/main/resources/application.properties" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Worker/src/test/java/ru/nsu/burde/crackhash/worker/WorkerApplicationTests.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-compose.yaml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$/Manager">
      <ProjectState />
    </projectState>
    <projectState path="$PROJECT_DIR$/Worker">
      <ProjectState />
    </projectState>
  </component>
  <component name="ExternalProjectsManager">
    <system id="GRADLE">
      <state>
        <projects_view>
          <tree_state>
            <expand />
            <select />
          </tree_state>
        </projects_view>
      </state>
    </system>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Dockerfile" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="KubernetesApiProvider"><![CDATA[{
  "isMigrated": true
}]]></component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo"><![CDATA[{
  "associatedIndex": 0
}]]></component>
  <component name="ProjectId" id="2dHDPscuj9Yup5hnjjDK2MQXfpt" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Docker.docker-compose.yaml.frontend: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yaml: Compose Deployment.executor": "Run",
    "Gradle.Build Manager.executor": "Run",
    "Gradle.Build Worker.executor": "Run",
    "RequestMappingsPanelOrder0": "0",
    "RequestMappingsPanelOrder1": "1",
    "RequestMappingsPanelWidth0": "75",
    "RequestMappingsPanelWidth1": "75",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "Spring Boot.ManagerApplication.executor": "Run",
    "Spring Boot.WorkerApplication.executor": "Run",
    "git-widget-placeholder": "master",
    "ignore.virus.scanning.warn.message": "true",
    "kotlin-language-version-configured": "true",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RunManager" selected="Spring Boot.ManagerApplication">
    <configuration name="ManagerApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" temporary="true" nameIsGenerated="true">
      <module name="crack-hash-manager.main" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="ru.nsu.burde.crackhash.manager.ManagerApplication" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="ru.nsu.burde.crackhash.manager.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="WorkerApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" temporary="true" nameIsGenerated="true">
      <module name="crack-hash-worker.main" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="ru.nsu.burde.crackhash.worker.WorkerApplication" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="ru.nsu.burde.crackhash.worker.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml" />
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yaml: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="sourceFilePath" value="docker-compose.yaml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yaml.frontend: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="frontend" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yaml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Spring Boot.ManagerApplication" />
        <item itemvalue="Docker.docker-compose.yaml: Compose Deployment" />
        <item itemvalue="Spring Boot.WorkerApplication" />
        <item itemvalue="Docker.docker-compose.yaml.frontend: Compose Deployment" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="jdk-17.0.10-corretto-17.0.10-4caba194b151-5cd809f4" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="2dcb78d4-427a-4588-aa68-18957b275e59" name="Changes" comment="" />
      <created>1709656089932</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1709656089932</updated>
      <workItem from="1709656091668" duration="8388000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
</project>